(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{103:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(6),i=(n(0),n(142)),o=n(143),c={id:"restapi",title:"Java Micronaut REST API"},l={id:"micronaut/restApi/restapi",isDocsHomePage:!1,title:"Java Micronaut REST API",description:"Time: 45 minutes",source:"@site/docs\\micronaut\\restApi\\rest_api.mdx",permalink:"/code_now/docs/micronaut/restApi/restapi",editUrl:"https://github.com/VitSestak/code_now/docs/micronaut/restApi/rest_api.mdx",sidebar:"Docs",previous:{title:"Java Micronaut REST Server with PostgreSQL",permalink:"/code_now/docs/micronaut/postgre/postgre"},next:{title:"Create a New Application",permalink:"/code_now/docs/admin_manuals/creNewApp"}},s=[{value:"What you\u2019ll learn",id:"what-youll-learn",children:[]},{value:"Project source",id:"project-source",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Steps",id:"steps",children:[]},{value:"What\u2019s next?",id:"whats-next",children:[]}],p={rightToc:s};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Time: 45 minutes"),Object(i.b)("h2",{id:"what-youll-learn"},"What you\u2019ll learn"),Object(i.b)("p",null,"How to setup your application for : "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"getting data from REST API, "),Object(i.b)("li",{parentName:"ul"},"providing data to REST API.")),Object(i.b)("p",null,"In this tutorial, we will create a simple Java component with the Java Micronaut scaffolder. We want to expose the single REST endpoint for getting user details for his username only. This will require simple sequential orchestration of two REST services, one to get user authorization privileges and second for basic user details. "),Object(i.b)("img",{alt:"clientInfoService",src:Object(o.a)("img/micronaut/restApi/ClientInfoService.png")}),Object(i.b)("h2",{id:"project-source"},"Project source"),Object(i.b)("p",null,"This example project can be cloned from: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"mailto:git@gitlab.factory.innobank.codenow.com"}),"git@gitlab.factory.innobank.codenow.com"),":innobank/client-info-service.git"),Object(i.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Prepare your local development environment for CodeNOW with Micronaut. ",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Follow the tutorial instructions in the ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.codenow.com/docs/local-development-with-codenow/java-micronaut-local-development/"}),"Java Micronaut Local Development")," tutorial."))),Object(i.b)("li",{parentName:"ul"},"Create a new component",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"For details, see the section ",Object(i.b)("em",{parentName:"li"},"Prerequisites")," of the ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.codenow.com/docs/local-development-with-codenow/java-micronaut-local-development/"}),"Java Micronaut Local Development")," tutorial.")))),Object(i.b)("h2",{id:"steps"},"Steps"),Object(i.b)("p",null,"Open your IDE, import the created component and start coding:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Define the message payload. Here is an example of the GetClientInfoResponse, which is a simple POJO with basic user details and roles:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Generate getters and setters with your IDE.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Examples of GetClientDataResponse and GetClientRolesResponse can be found in the example project repository."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"01  package io.codenow.client.info.service.model;\n02   \n03  import java.time.LocalDate;\n04  import java.util.Set;\n05   \n06  public class GetClientInfoResponse {\n07 \n08      private String firstname;\n09      private String surname;\n10      private LocalDate birthdate;\n11      private Set<String> roles;\n12  }\n"))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Next, create http clients for calling the orchestrated endpoints. Example for ClientDataServiceClient:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The second required client ClientAuthorizationServiceClient can be found in the example project repository")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"For more details about Micronaut clients: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.micronaut.io/latest/guide/httpClient.html#clientAnnotation"}),"https://docs.micronaut.io/latest/guide/http<Client.html#clientAnnotation"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Create a new Java interface:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'01  package io.codenow.client.info.service.clients;\n02 \n03  import io.codenow.client.info.service.model.GetClientDataResponse;\n04  import io.micronaut.http.annotation.Get;\n05  import io.micronaut.http.annotation.PathVariable;\n06  import io.micronaut.http.client.annotation.Client;\n07  import io.reactivex.Single;\n08 \n09  @Client("http://client-data-service")\n10  public interface ClientDataServiceClient {\n11 \n12      @Get("/data/{username}")\n13      public Single<GetClientDataResponse> getClientData(@PathVariable String username);\n14  }\n'))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Create a new controller and put all the parts together"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"For more details, see ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.micronaut.io/latest/guide/index.html#httpServer"}),"https://docs.micronaut.io/latest/guide/index.html#httpServer")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'01  package io.codenow.client.info.service.controller;\n02 \n03 \n04  import java.util.Set;\n05 \n06  import org.slf4j.Logger;\n07  import org.slf4j.LoggerFactory;\n08 \n09  import io.codenow.client.info.service.clients.ClientAuthorizationServiceClient;\n10  import io.codenow.client.info.service.clients.ClientDataServiceClient;\n11  import io.codenow.client.info.service.model.GetClientDataResponse;\n12  import io.codenow.client.info.service.model.GetClientInfoResponse;\n13  import io.codenow.client.info.service.model.GetClientRolesResponse;\n14  import io.micronaut.http.annotation.Consumes;\n15  import io.micronaut.http.annotation.Controller;\n16  import io.micronaut.http.annotation.Get;\n17  import io.micronaut.http.annotation.PathVariable;\n18  import io.micronaut.http.annotation.Produces;\n19  import io.micronaut.validation.Validated;\n20  import io.reactivex.Single;\n21   \n22 \n23  @Validated\n24  @Controller("/info")\n25  public class ClientInfoController {\n26 \n27      private static final Logger LOG = LoggerFactory.getLogger(ClientInfoController.class);\n28     \n29      private ClientAuthorizationServiceClient clientAuthorizationServiceClient;\n30      private ClientDataServiceClient clientDataServiceClient;\n31     \n32      public ClientInfoController(ClientAuthorizationServiceClient clientAuthorizationServiceClient,\n33           ClientDataServiceClient clientDataServiceClient) {\n34       super();\n35       this.clientAuthorizationServiceClient = clientAuthorizationServiceClient;\n36       this.clientDataServiceClient = clientDataServiceClient;\n37      }\n38 \n39      @Get("/{username}")\n40      @Produces\n41      @Consumes\n42      public Single<GetClientInfoResponse> getClientInfo(@PathVariable String username) {\n43       LOG.info("username: {}", username);\n44 \n45       Single<GetClientRolesResponse> rolesResp = clientAuthorizationServiceClient.getClientRoles(username);\n46       Single<GetClientDataResponse> clientDataResp = clientDataServiceClient.getClientData(username);\n47      \n48       Set<String> roles = rolesResp.blockingGet().getRoles();\n49       GetClientInfoResponse response = new GetClientInfoResponse();\n50       response.setRoles(roles);\n51       GetClientDataResponse info = clientDataResp.blockingGet();\n52       response.setBirthdate(info.getBirthdate());\n53       response.setFirstname(info.getFirstname());\n54       response.setSurname(info.getSurname());\n55 \n56          return Single.just(response);\n57      }\n58  }\n'))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Do not forget to change the swagger.yaml. Check it in the example project: ",Object(i.b)("em",{parentName:"p"},"src/main/resources/META-INF/swagger/swagger.yaml"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Try to build and run the application in your IDE. After startup, you should be able to access your new controller\u2019s swagger: ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("a",Object(a.a)({parentName:"strong"},{href:"http://localhost:8080/swagger/index.html"}),"http://localhost:8080/swagger/index.html"))),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"For the correct setup, check the Readme.md in the project root or see the tutorial ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.codenow.com/docs/local-development-with-codenow/java-micronaut-local-development/"}),"Java Micronaut Local Development"),", section ",Object(i.b)("em",{parentName:"li"},"Prepare local development IDE")),Object(i.b)("li",{parentName:"ul"},"The component exposes a simple GET endpoint and can be tested using a browser call only. You should not forget to document your API and use the swagger-ui accordingly.")))),Object(i.b)("img",{alt:"clientInfoServiceSwagger",src:Object(o.a)("img/micronaut/restApi/clientInformationService_swagger.png")}),Object(i.b)("h2",{id:"whats-next"},"What\u2019s next?"),Object(i.b)("p",null,"If your code works in the local development, you are ready to push your changes to GIT and try to build and deploy your new component version to the CodeNOW environment. For more information, see ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.codenow.com/docs/administration-manuals/deploy-application/"}),"Application Deployment")," and ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.codenow.com/docs/administration-manuals/deployment-monitoring/"}),"Monitoring"),"."),Object(i.b)("p",null,"See our other developer guides to get orchestrated microservices ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.codenow.com/docs/java-micronaut-examples/java-micronaut-rest-server-with-postgresql/"}),"Micronaut REST Server with PostgreSQL")," and ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.codenow.com/docs/java-micronaut-examples/java-micronaut-rest-server-with-redis-and-kafka/"}),"Micronaut REST Server with Redis and Kafka")," working."))}u.isMDXComponent=!0},141:function(e,t,n){"use strict";var a=n(0),r=n(35);t.a=function(){return Object(a.useContext)(r.a)}},142:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),b=a,d=u["".concat(o,".").concat(b)]||u[b]||m[b]||i;return n?r.a.createElement(d,c(c({ref:t},s),{},{components:n})):r.a.createElement(d,c({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},143:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(141),r=n(144);function i(e,{forcePrependBaseUrl:t=!1,absolute:n=!1}={}){const{siteConfig:{baseUrl:i="/",url:o}={}}=Object(a.a)();if(!e)return e;if(t)return i+e;if(!Object(r.a)(e))return e;const c=i+e.replace(/^\//,"");return n?o+c:c}},144:function(e,t,n){"use strict";function a(e){return!1===/^(https?:|\/\/|mailto:|tel:)/.test(e)}n.d(t,"a",(function(){return a}))}}]);